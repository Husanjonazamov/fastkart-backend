# Generated by Django 5.1.3 on 2025-01-22 13:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0002_alter_blogmodel_tags'),
        ('core', '0001_initial'),
        ('product', '0002_categorymodel_tagsmodel'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StoreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField()),
                ('slug', models.SlugField(unique=True)),
                ('city', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('pincode', models.CharField(max_length=20)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('pinterest', models.URLField(blank=True, null=True)),
                ('hide_vendor_email', models.BooleanField(default=False)),
                ('hide_vendor_phone', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('orders_count', models.IntegerField(default=0)),
                ('reviews_count', models.IntegerField(default=0)),
                ('products_count', models.IntegerField(default=0)),
                ('order_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('rating_count', models.IntegerField(default=0)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stores', to='core.countrymodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stores_created', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stores', to='core.statemodel')),
                ('store_cover', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_covers', to='content.imagemodel')),
                ('store_logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='store_logos', to='content.imagemodel')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'StoreModel',
                'verbose_name_plural': 'StoreModels',
                'db_table': 'Store',
            },
        ),
        migrations.CreateModel(
            name='TaxModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taxes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TaxModel',
                'verbose_name_plural': 'TaxModels',
                'db_table': 'Tax',
            },
        ),
        migrations.CreateModel(
            name='VariationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
                ('stock_status', models.CharField(choices=[('in_stock', 'In Stock'), ('out_of_stock', 'Out of Stock'), ('on_backorder', 'In Backorder')], max_length=50)),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('sku', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('variation_options', models.JSONField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('variation_image', models.ImageField(blank=True, null=True, upload_to='variations/')),
                ('attribute_values', models.ManyToManyField(related_name='variations', to='product.attributevaluemodel')),
            ],
            options={
                'verbose_name': 'Variation Model',
                'verbose_name_plural': 'Variation Models',
                'db_table': 'Variation ',
            },
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('short_description', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('simple', 'Dimple product'), ('variable', 'Product with variations'), ('grouped', 'Collection of products'), ('external', 'External product'), ('affiliate', 'Affiliate product'), ('virtual', 'Virtual product'), ('downloadable', 'Downloadable product')], max_length=100)),
                ('unit', models.CharField(max_length=100)),
                ('weight', models.FloatField()),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('shipping_days', models.IntegerField(blank=True, null=True)),
                ('is_cod', models.BooleanField(default=False)),
                ('is_free_shipping', models.BooleanField(default=False)),
                ('is_sale_enable', models.BooleanField(default=False)),
                ('is_return', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('sale_starts_at', models.DateTimeField(blank=True, null=True)),
                ('sale_expired_at', models.DateTimeField(blank=True, null=True)),
                ('sku', models.CharField(max_length=255, unique=True)),
                ('is_random_related_products', models.BooleanField(default=False)),
                ('stock_status', models.CharField(choices=[('in_stock', 'In Stock'), ('out_of_stock', 'Out of Stock'), ('on_backorder', 'In Backorder')], default='in_stock', max_length=50)),
                ('meta_title', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, null=True)),
                ('estimated_delivery_text', models.CharField(blank=True, max_length=255, null=True)),
                ('return_policy_text', models.CharField(blank=True, max_length=255, null=True)),
                ('safe_checkout', models.BooleanField(default=False)),
                ('secure_checkout', models.BooleanField(default=False)),
                ('social_share', models.BooleanField(default=False)),
                ('encourage_order', models.BooleanField(default=False)),
                ('encourage_view', models.BooleanField(default=False)),
                ('slug', models.SlugField(unique=True)),
                ('status', models.BooleanField(default=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('orders_count', models.IntegerField(default=0)),
                ('reviews_count', models.IntegerField(default=0)),
                ('can_review', models.BooleanField(default=True)),
                ('rating_count', models.FloatField(default=0.0)),
                ('order_amount', models.FloatField(default=0.0)),
                ('review_ratings', models.JSONField(blank=True, default=list)),
                ('attributes', models.ManyToManyField(blank=True, related_name='products', to='product.attributemodel')),
                ('categories', models.ManyToManyField(blank=True, related_name='products', to='product.categorymodel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to=settings.AUTH_USER_MODEL)),
                ('cross_sell_products', models.ManyToManyField(blank=True, related_name='cross_sells', to='product.productmodel')),
                ('product_galleries', models.ManyToManyField(blank=True, related_name='products', to='content.imagemodel')),
                ('product_meta_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_meta_images', to='content.imagemodel')),
                ('product_thumbnail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_thumbnails', to='content.imagemodel')),
                ('related_products', models.ManyToManyField(blank=True, related_name='related_to_products', to='product.productmodel')),
                ('size_chart_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='size_chart_images', to='content.imagemodel')),
                ('tags', models.ManyToManyField(blank=True, related_name='products', to='product.tagsmodel')),
                ('store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='product.storemodel')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.taxmodel')),
                ('variations', models.ManyToManyField(blank=True, related_name='products', to='product.variationmodel')),
            ],
            options={
                'verbose_name': 'ProductModel',
                'verbose_name_plural': 'ProductModels',
                'db_table': 'Product',
            },
        ),
    ]
